import mx.utils.Delegate;import toolbarcomponent.core.*;//class toolbarcomponent.core.ForeignLetter extends MovieClip {	private var clip:MovieClip;	private var activeCaret;	private var classScope:Object;	private var letterVar:String;	private var myText:TextField;	private var callBack:Function;	//	public function ForeignLetter(classScope:Object, clip:MovieClip, letter:String, d:Function) {		this.classScope = classScope;		this.clip = clip;		clip.foreignText = letter;		letterVar=letter;		callBack=d;		//		clip.onRollOver = Delegate.create(this, findActiveCaret);		clip.onRelease = Delegate.create(this, insertCharacter);	}	//	private function findActiveCaret():Void {		// When the mouse is rolling over, the focus should still be on the current text field		//   So while it is still selected, get the caret index		activeCaret = Selection.getCaretIndex();	}	//	private function insertCharacter():Void {		// Only do the following code if the text field has a valid caret positon		if (activeCaret>-1) {			// Get the strings before and after the current caret position,			var begin:String = _global.activeText.text.substr(0, activeCaret);			var end:String = _global.activeText.text.substr(activeCaret);			// Add the foreign character in between the beginning and end strings			_global.activeText.text = begin+clip.foreignText+end;			// Return focus to the textfield, at the correct position			Selection.setFocus(_global.activeText);			Selection.setSelection(activeCaret+1, activeCaret+1);		}		if(myText!=null){		}		else{			callBack(letterVar);		}	}}