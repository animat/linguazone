import mx.utils.Delegate;class Timer {	private var timer:MovieClip;	private var timerNum:Number = 0;	private var timerInterval:Number;	private var timerPaused:Boolean;	private var countUp:Boolean;	private var startValue:Number;	//	public function Timer(classScope:Object, xPos:Number, yPos:Number, scaler:Number) {		timer = LZGame.getStage().attachMovie("timer", "timer", 9998);		timer._x = xPos;		timer._y = yPos;		timer._xscale = timer._yscale = scaler;		timerNum = 0;		timer.counter = "0:00";		timerPaused = false;		timerInterval = setInterval(this, "countSecond", 1000);	}	private function countSecond() {		timerNum++;		var minutes:Number = Math.floor(timerNum / 60);		var sec:Number = timerNum % 60;		var seconds:Number = sec < 10 ? "0"+sec : sec;		timer.counter = minutes+":"+seconds;	}	//	public function resumeTimer():Void {		clearInterval(timerInterval);		timerInterval = setInterval(this, "countSecond", 1000);		timerPaused = false;		timer._alpha = 100;		timer.play();	}	public function pauseTimer(pauseTime:Number):Void {		clearInterval(timerInterval);		timerPaused = true;		timer._alpha = 65;		timer.gotoAndStop(1);		if (pauseTimer != undefined) {			timerInterval = setInterval(this, "resumeTimer", pauseTime);		}	}	public function stopTimer():Void {		timerPaused = true;		timer.stop();		clearInterval(timerInterval);	}	public function deleteTimer():Void {		removeMovieClip(timer);		delete this;	}	//	// Getter and setter functions	public function getTime():String {		return timer.counter;	}	public function isPaused():Boolean {		return timerPaused;	}	public function setXPos(pos:Number):Void {		timer._x = pos;	}	public function setYPos(pos:Number):Void {		timer._y = pos;	}	public function setScalePos(size:Number):Void {		timer._xscale = size;		timer._yscale = size;	}	public function setAlpha(amount:Number):Void {		timer._alpha = amount;	}	public function addSeconds(adjustment:Number):Void {		for (var i:Number = 0; i < adjustment; i++) {			countSecond();		}	}}